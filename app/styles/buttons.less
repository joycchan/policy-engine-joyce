@import 'variables';

.button {
  font-family: 'CiscoSansTT';
  font-size: 12px;
  color: white;
  line-height: 18px;
  border-radius: 16px;
  height: 32px;
  padding-left: 20px;
  padding-right: 20px;
  padding-top: 8px;
  cursor: pointer;
  text-align: center;
  display: inline-block;
  white-space: nowrap;
  background-color: @lime-green;

  &:hover {
    &:extend(.button--hover);
  }

  div, span {
    vertical-align: top;
  }
  div {
    display: inline-block;
  }
  .plus {
    &:extend(.thin);
    display: inline-block;
    font-size: 28px;
    line-height: 18px;
    height: 18px;
    width: 18px;
    margin-right: 3px;
  }
  .icon {
    display: inline-block;
    height: 20px;
    width: 20px;
    margin-right: 3px;
    margin-top: -2px;
  }
}

/*
  By declaring it both ways, this allows a developer who consumes this to
  1. :extend() .button--secondary for re-use,
    e.g. .hello {
     // &:extend(.button--secondary);
    }
  2. Have the right amount of specificity without resorting to !important.
  It allows the hover state to have the correct background-color (and not have it be overwritten by .button's :hover background-color).
  Correct usage in html: when an element has a .button--secondary class, it should also has a .button class as well.
  e.g. <div class="button button--secondary"></div>
*/

.button--secondary, .button.button--secondary, {
  background-color: @color-70;
  &:hover {
    &:extend(.button--secondaryHover);
  }
}

.button--danger, .button.button--danger {
  background-color: @red;
}

.button--primary, .button.button--primary {
  background-color: @blue;
}

.button.is-disabled {
  &:extend(.extra-light);
  color: @color-70;
  background-color: @color-80;
  cursor: default;

  &:hover {
    color: @color-70 !important;
    background-color: @color-80 !important;
  }
}

.button--hover {
  background-color: @dark-lime-green;
}

.button--secondaryHover {
  background-color: @color-65;
}

.button.is-selected {
  background-color: @color-60;
}

// use on the parent element when two buttons are next to each other
// e.g. Cancel        OK
.button-group {
  padding: 20px 0 15px;

  .button {
    margin-right: 5px;
  }
  .button:last-child {
    margin-right: 0px;
  }
}

.button-group--right {
  text-align: right;
}

// button as a dropdown
.button-dropdown {
  display: inline-block;
  
  // overriding bootstrap

  // bootstrap js hook
  &.open {
    .button--dropdown {
      &:extend(.button.is-selected);
      color: white;
    }
  }
  .dropdown-menu {
    box-shadow: none;
    padding: 12px 0;
    left: 50%;

    > li > a {
      cursor: pointer;
      line-height: 25px;
      font-size: 12px;

      &:hover {
        background-color: #e7ecf2;
      }
    }
  } 
}